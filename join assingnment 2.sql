use mavenmovies;
-- Question 1:  Retrieve the total number of rentals made in the Sakila database.  Hint: Use the COUNT() function.
select count(rental_id) as total_number_of_rentals  from rental ;
-- Question 2:  Find the average rental duration (in days) of movies rented from the Sakila database. Hint: Utilize the AVG() function
select avg(datediff(rental_date,return_date) ) as average_rental_duration from  rental;
-- question3: Display the first name and last name of customers in uppercase.  
select upper(first_name) , UPPER(last_name)from customer;
-- Question 4:  Extract the month from the rental date and display it alongside the rental ID.  Hint: Employ the MONTH() function.  
select rental_id,month(rental_date) as month from rental;
-- Question 5:  Retrieve the count of rentals for each customer (display customer ID and the count of rentals).  Hint: Use COUNT () in conjunction with GROUP BY.  
select customer_id,count(rental_id) from rental group by customer_id;
-- Question 6:  Find the total revenue generated by each store.  
SELECT 
    s.store_id, SUM(p.amount) as total_revenue
FROM
    payment p
        JOIN
    staff s ON p.staff_id = s.staff_id
        JOIN
    store ON store.store_id = s.store_id
GROUP BY p.payment_id; 
-- question :7 Display the title of the movie, customer s first name, and last name who rented it.  Hint: Use JOIN between the film, inventory, rental, and customer tables. 

SELECT 
    f.title, c.first_name, c.last_name
FROM
    film f
        JOIN
    inventory i ON i.film_id = f.film_id
        JOIN
    rental r ON i.inventory_id = r.inventory_id
        JOIN
    customer c ON r.customer_id = c.customer_id;

-- Question 8:  Retrieve the names of all actors who have appeared in the film "Gone with the Wind."  Hint: Use JOIN between the film actor, film, and actor tables. 

SELECT 
    a.first_name, a.last_name
FROM
    actor a
        JOIN
    film_actor fa ON a.actor_id = fa.actor_id
        JOIN
    film f ON fa.film_id = f.film_id where f.title="Gone with the Wind";
-- Question 1:  Determine the total number of rentals for each category of movies.  Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY.  

SELECT 
    fc.category_id, COUNT(r.rental_id) as rental_count
FROM
    rental r
        JOIN
    inventory i ON i.inventory_id = r.inventory_id
        JOIN
    film f ON f.film_id = i.film_id
        JOIN
    film_category fc ON f.film_id = fc.film_id 
    group by fc.category_id;
    
-- Question 2:  Find the average rental rate of movies in each language.  
-- Hint: JOIN film and language tables, then use AVG () and GROUP BY.

SELECT 
    AVG(f.rental_rate) as avg_rental_rate , l.name
FROM
    language l
        JOIN
    film f ON l.language_id = f.language_id
GROUP BY l.name;
-- Question 3:  
-- Retrieve the customer names along with the total amount they've spent on rentals. 
 -- Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY.  
 
select sum(amount) from payment;
SELECT 
    c.first_name,c.last_name, SUM(p.amount) as total_rental_amount
FROM
    customer c
        JOIN
    payment p ON p.customer_id = c.customer_id
        JOIN
    rental r ON p.rental_id = r.rental_id group by c.customer_id;
-- Question 4:  
-- List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
-- Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY.  
SELECT 
    f.title as title_of_movie, c.first_name, c.last_name
FROM
    customer c
        JOIN
    address a ON c.address_id = a.address_id
        JOIN
    city ci ON ci.city_id = a.city_id
        JOIN
    rental r ON r.customer_id = c.customer_id
        JOIN
    inventory i ON i.inventory_id = r.inventory_id
        JOIN
    film f ON f.film_id = i.film_id
WHERE
    ci.city = 'london'
order by f.title , c.first_name , c.last_name;
-- Question 5:  
-- Display the top 5 rented movies along with the number of times they've been rented.  
-- Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results. 
select * from film;     -- f.film_id=i.film_id
select * from inventory; -- i.inventory_id=r.inventory_id
SELECT 
    f.title, COUNT(*) AS number_of_rentals
FROM
    film f
        JOIN
    inventory i ON f.film_id = i.film_id
        JOIN
    rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title
ORDER BY number_of_rentals DESC
LIMIT 5;
-- Question 6:  
-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
-- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY. 
SELECT 
    c.customer_id,c.first_name,c.last_name
FROM
    customer AS c
        INNER JOIN
    rental AS r ON c.customer_id = r.customer_id
        INNER JOIN
    inventory AS i ON r.inventory_id = i.inventory_id
        INNER JOIN
    store s ON i.store_id = s.store_id
WHERE
    i.store_id IN (1 , 2) group by c.customer_id,c.first_name,c.last_name having count(distinct s.store_id) =2;